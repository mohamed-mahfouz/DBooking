// <auto-generated />
using System;
using DBooking.Modules.DoctorAvailability.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBooking.Modules.DoctorAvailability.Infrastructure.Migrations
{
    [DbContext(typeof(DoctorAvailabilityDbContext))]
    [Migration("20250124152543_AddSlotSeedData")]
    partial class AddSlotSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("DoctorAvailability")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DBooking.Modules.DoctorAvailability.Infrastructure.Data.Entities.Slot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Slots", "DoctorAvailability");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c3aa35e-4c09-41d9-a47e-d7b47fdc6587"),
                            Cost = 150m,
                            CreationDate = new DateTime(2025, 1, 24, 15, 25, 41, 386, DateTimeKind.Utc).AddTicks(577),
                            DoctorId = new Guid("b08ef79d-2e87-4b7e-91c6-542d3a3b4678"),
                            DoctorName = "Doctor 1",
                            IsReserved = false,
                            Time = new DateTime(2025, 1, 26, 15, 25, 41, 386, DateTimeKind.Utc).AddTicks(578)
                        },
                        new
                        {
                            Id = new Guid("753fa6b7-3846-485e-9c82-769a1bebb503"),
                            Cost = 250m,
                            CreationDate = new DateTime(2025, 1, 24, 15, 25, 41, 386, DateTimeKind.Utc).AddTicks(588),
                            DoctorId = new Guid("b08ef79d-2e87-4b7e-91c6-542d3a3b4678"),
                            DoctorName = "Doctor 1",
                            IsReserved = false,
                            Time = new DateTime(2025, 1, 27, 15, 25, 41, 386, DateTimeKind.Utc).AddTicks(588)
                        },
                        new
                        {
                            Id = new Guid("af4e18e3-9883-4ac5-bbfe-cefc958bf746"),
                            Cost = 350m,
                            CreationDate = new DateTime(2025, 1, 24, 15, 25, 41, 386, DateTimeKind.Utc).AddTicks(590),
                            DoctorId = new Guid("b08ef79d-2e87-4b7e-91c6-542d3a3b4678"),
                            DoctorName = "Doctor 1",
                            IsReserved = false,
                            Time = new DateTime(2025, 1, 28, 15, 25, 41, 386, DateTimeKind.Utc).AddTicks(591)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
